[{"E:\\ws202006\\antd4\\src\\index.tsx":"1","E:\\ws202006\\antd4\\src\\reportWebVitals.ts":"2","E:\\ws202006\\antd4\\src\\App.tsx":"3","E:\\ws202006\\antd4\\src\\component\\layout\\Index.tsx":"4","E:\\ws202006\\antd4\\src\\component\\exception\\Notfoud.tsx":"5","E:\\ws202006\\antd4\\src\\routes\\config.ts":"6","E:\\ws202006\\antd4\\src\\component\\login\\Index.tsx":"7","E:\\ws202006\\antd4\\src\\component\\registry\\Index.tsx":"8","E:\\ws202006\\antd4\\src\\component\\particles\\ParticlesConfig.ts":"9"},{"size":626,"mtime":1610530308664,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":987,"mtime":1610530294321,"results":"13","hashOfConfig":"11"},{"size":1592,"mtime":1610530225456,"results":"14","hashOfConfig":"11"},{"size":453,"mtime":1610356215990,"results":"15","hashOfConfig":"11"},{"size":721,"mtime":1610530176769,"results":"16","hashOfConfig":"11"},{"size":4868,"mtime":1610588929449,"results":"17","hashOfConfig":"11"},{"size":7300,"mtime":1610587767867,"results":"18","hashOfConfig":"11"},{"size":2106,"mtime":1610508796071,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19flxcl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\ws202006\\antd4\\src\\index.tsx",[],["43","44"],"E:\\ws202006\\antd4\\src\\reportWebVitals.ts",[],"E:\\ws202006\\antd4\\src\\App.tsx",["45","46"],"import {Component} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport {exceptionRoutes, mainRoutes} from \"./routes/config\";\nimport {createBrowserHistory} from \"history\"\n\nconst history = createBrowserHistory();\nclass App extends Component<any, any>{\n\n    constructor(props: any, state: any) {\n      super(props,state);\n    }\n\n    render() {\n      return (\n        <Router>\n          <Switch>\n            {\n              mainRoutes.map(mRoutes =>{\n                return (\n                  <Route key={mRoutes.path}\n                     path={mRoutes.path}\n                     exact={mRoutes.exact}\n                     render={routeProps => {\n                         return <mRoutes.component {...routeProps}/>\n                     }}\n                  />\n                )\n              })\n            }\n            <Redirect to={exceptionRoutes[0].path}/>\n          </Switch>\n        </Router>\n      );\n    }\n}\nexport default App;","E:\\ws202006\\antd4\\src\\component\\layout\\Index.tsx",["47"],"import {Component} from \"react\";\r\nimport \"./Index.less\"\r\nimport {Layout, Menu , Breadcrumb} from \"antd\";\r\n\r\nconst { Header, Content, Footer ,Sider} = Layout;\r\nexport class Index extends Component<any, any>{\r\n\r\n    constructor(props: any, state: any) {\r\n        super(props,state);\r\n        console.log(props.match);\r\n        this.state = {\r\n            test: \"测试\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const {test} = this.state;\r\n      return (\r\n        <Layout className=\"layout\" style={{height: \"100%\"}}>\r\n          <Layout>\r\n            <Header>\r\n              <div className=\"logo\" />\r\n              <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n              </Menu>\r\n            </Header>\r\n            <Content style={{ padding: '0 50px' }}>\r\n              <Breadcrumb style={{ margin: '16px 0' }}>\r\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item>List</Breadcrumb.Item>\r\n                <Breadcrumb.Item>App</Breadcrumb.Item>\r\n              </Breadcrumb>\r\n              <div className=\"site-layout-content\">\r\n                {\r\n                  this.props.children\r\n                }\r\n              </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Copyright © 2020 Gaosiy All Rights Reserved. Gaosiy版权所有</Footer>\r\n          </Layout>\r\n          <Sider>Sider</Sider>\r\n        </Layout>\r\n      );\r\n    }\r\n\r\n}","E:\\ws202006\\antd4\\src\\component\\exception\\Notfoud.tsx",[],"E:\\ws202006\\antd4\\src\\routes\\config.ts",[],"E:\\ws202006\\antd4\\src\\component\\login\\Index.tsx",["48","49"],"import {Component} from \"react\";\r\nimport \"../lessbase/LOR.less\"\r\nimport {Card, Form, Input, Button, Checkbox, Row , Col, Tooltip} from \"antd\";\r\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone} from '@ant-design/icons';\r\nimport Particles from \"react-particles-js\";\r\nimport {ILoginState} from \"../../interface\";\r\nimport {particlesConfig} from \"../particles/ParticlesConfig\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class Login extends Component<any, ILoginState>{\r\n    constructor(props: any, state: ILoginState) {\r\n      super(props, state);\r\n      const username = localStorage.getItem(\"login-username\") || \"\";\r\n      const password = localStorage.getItem(\"login-password\") || \"\";\r\n      let rememberme = localStorage.getItem(\"login-rememberme\") || false;\r\n      rememberme = rememberme ? rememberme == \"1\" ? true : false : false;\r\n      this.state = {\r\n        params: particlesConfig,\r\n        rememberme: rememberme,\r\n        username: username,\r\n        password: password,\r\n        modified: false\r\n      }\r\n    }\r\n\r\n    onFinish = (values: any) => {\r\n      const {rememberme, modified} = this.state;\r\n      let {username, password} = values\r\n      if(modified){\r\n        if(rememberme){\r\n          localStorage.setItem(\"login-username\",username);\r\n          localStorage.setItem(\"login-password\",password);\r\n          localStorage.setItem(\"login-rememberme\",\"1\");\r\n        } else {\r\n          localStorage.removeItem(\"login-username\");\r\n          localStorage.removeItem(\"login-password\");\r\n          localStorage.removeItem(\"login-rememberme\");\r\n        }\r\n      }\r\n      if(username === \"admin\" && password === \"111111\"){\r\n        this.props.history.push(\"/admin\");\r\n      }\r\n    };\r\n\r\n    rememberMeHandle = () =>{\r\n      const {rememberme} = this.state;\r\n      this.setState({\r\n        rememberme: !rememberme,\r\n        modified: true\r\n      });\r\n    }\r\n\r\n  render() {\r\n      const {params, username ,password, rememberme} = this.state;\r\n        return (\r\n          <div className=\"card-par-div\">\r\n            <Particles\r\n              params={params}\r\n              className=\"particles-style\"\r\n            />\r\n\r\n            <Card\r\n              title=\"登录\"\r\n              className=\"card-login\"\r\n            >\r\n              <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n              >\r\n                <Form.Item\r\n                  name=\"username\"\r\n                  rules={[{ required: true, message: '请输入用户名!' }]}\r\n                  initialValue={username}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"用户名\"\r\n                    allowClear\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[{ required: true, message: '请输入密码!' }]}\r\n                  initialValue={password}\r\n                >\r\n                  <Input.Password\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                    allowClear = {true}\r\n                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item noStyle={true}>\r\n                  <Row>\r\n                    <Col span={12} style={{textAlign: \"left\"}}>\r\n                      <Tooltip placement=\"topLeft\" title={\"此选项会将账密保存着本地，请谨慎使用，如需删除，取消勾选点击登录，或者清除cookie\"}>\r\n                        <Checkbox\r\n                          name=\"remember\"\r\n                          onChange={this.rememberMeHandle}\r\n                          defaultChecked={rememberme}\r\n                        >记住我</Checkbox>\r\n                      </Tooltip>\r\n                    </Col>\r\n                    <Col span={12}  style={{textAlign: \"right\"}}>\r\n                      <a className=\"login-form-forgot\" href=\"#\">\r\n                        忘记密码？\r\n                      </a>\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>\r\n                    登录\r\n                  </Button>\r\n                  <div style={{textAlign: \"left\"}}>\r\n                    或者<Link to=\"/admin/registry\">注册!</Link>\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","E:\\ws202006\\antd4\\src\\component\\registry\\Index.tsx",[],"E:\\ws202006\\antd4\\src\\component\\particles\\ParticlesConfig.ts",[],["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":7,"nodeType":"58","messageId":"59","endLine":6,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":9,"column":5,"nodeType":"62","messageId":"63","endLine":11,"endColumn":6},{"ruleId":"56","severity":1,"message":"64","line":17,"column":14,"nodeType":"58","messageId":"59","endLine":17,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":16,"column":44,"nodeType":"67","messageId":"68","endLine":16,"endColumn":46},{"ruleId":"69","severity":1,"message":"70","line":108,"column":23,"nodeType":"71","endLine":108,"endColumn":65},{"ruleId":"52","replacedBy":"72"},{"ruleId":"54","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'test' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["74"],["75"],"no-global-assign","no-unsafe-negation"]